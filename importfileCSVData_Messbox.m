function [Matrix_Channel1,Matrix_Channel2,Matrix_Channel3,Matrix_Channel4] = importfileCSVData_Messbox(filename,chirpNumber, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [CHIRP1,CHANNEL1,CHANNEL2,CHANNEL3,CHANNEL4] = IMPORTFILE(FILENAME)
%   Reads data from text file FILENAME for the default selection.
%
%   [CHIRP1,CHANNEL1,CHANNEL2,CHANNEL3,CHANNEL4] = IMPORTFILE(FILENAME,
%   STARTROW, ENDROW) Reads data from rows STARTROW through ENDROW of text
%   file FILENAME.
%
% Example:
%   [chirp1,channel1,channel2,channel3,channel4] =
%   importfile('tst11.csv',2, 262145);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/05/23 15:41:21

%% Initialize variables.
delimiter = ';';
if nargin<=2
    chirpNumber=2048;
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
chirp1 = dataArray{:, 1};
channel1 = dataArray{:, 2};
channel2 = dataArray{:, 3};
channel3 = dataArray{:, 4};
channel4 = dataArray{:, 5};

%%Allocate Data to ChirpMatrix

for m = 1:length(channel1)/chirpNumber
    Matrix_Channel1(:,m)=channel1(m*chirpNumber-chirpNumber+1:m*chirpNumber);
    Matrix_Channel2(:,m)=channel2(m*chirpNumber-chirpNumber+1:m*chirpNumber);
    Matrix_Channel3(:,m)=channel3(m*chirpNumber-chirpNumber+1:m*chirpNumber);
    Matrix_Channel4(:,m)=channel4(m*chirpNumber-chirpNumber+1:m*chirpNumber);
 end
